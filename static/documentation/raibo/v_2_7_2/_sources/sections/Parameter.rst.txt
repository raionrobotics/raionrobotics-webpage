#############################
Parameter
#############################
Raisin provides a global parameter tree. The root of this tree is a static variable accessible through the static method ``ParameterContainer::getRoot()``. Controllers and plugins, which are dynamically loaded, should not directly invoke ``ParameterContainer::getRoot()``; they should use their own ``paramRoot_``.

In this tree, nodes can either be ``Parameter`` or ``ParameterContainer`` types. ``Parameter`` nodes are leaf nodes, while ``ParameterContainer`` nodes are not. To navigate to a child ``ParameterContainer``, you use the ``[]`` operator. For a child ``Parameter``, you use the ``()`` operator. Accessing a non-existent child node will automatically create that node.

``Parameter`` nodes support various data types, including ``STRING, DOUBLE, BOOL, VECTOR, and INT``.

To set a parameter, you simply use the ``=`` operator followed by the appropriate type. When you need to use a parameter, ensure you cast it to the correct type using ``static_cast<DType>(parameter)``.

The ``ParameterContainer`` can be initialized from a YAML file using the method ``loadFromPackageParameterFile``. This YAML file should be located in ``install/config/$PACKAGE_NAME/config/params.yaml``.

**The parameter can be overridden by the file located at $HOME/.raisin/$PACKAGE_NAME/params.yaml. When running the executable with sudo su, $HOME is /root.**

Here's an example of how the syntax in the YAML file should look:

.. code-block:: xml

  test_string:
    value: hello
    dtype: string
    options: [hello, goodbye]
  test_double:
    value: 5.3
    dtype: double
    min: 3
    max: 5
  test_int:
    value: 3
    dtype: int
  test_bool:
    value: true
    dtype: bool
  test_vec_double:
    value: [1,2,3]
    dtype: vector<double>
  test_vec_string:
    value: ["hello", "world"]
    dtype: vector<string>
  test_vec_int:
    value: [1,2,3]
    dtype: vector<int>


For practical implementation examples, refer to the :download:`test_raisin_parameter.cpp <../example/test_raisin_parameter.cpp>`.

.. literalinclude:: ../example/test_raisin_parameter.cpp
  :language: cpp

API
====

.. doxygenclass:: raisin::parameter::ParameterContainer
   :members:

.. doxygenclass:: raisin::parameter::Parameter
   :members: